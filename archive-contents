(1
 (a . [(20201203 1927) ((emacs (25))) "Associative data structure functions" tar])
 (ac-ispell . [(20151101 226) ((auto-complete (1 4)) (cl-lib (0 5))) "ispell completion source for auto-complete" tar])
 (ace-jump-helm-line . [(20160918 1836) ((avy (0 4 0)) (helm (1 6 3))) "Ace-jump to a candidate in helm window" tar])
 (ace-link . [(20200518 957) ((avy (0 4 0))) "Quickly follow links" tar])
 (ace-window . [(20200606 1259) ((avy (0 5 0))) "Quickly switch windows." tar])
 (aggressive-indent . [(20200824 2352) ((emacs (24 3))) "Minor mode to aggressively keep your code always indented" tar])
 (alert . [(20200303 2118) ((gntp (0 1)) (log4e (0 3 0)) (cl-lib (0 5))) "Growl-style notification system for Emacs" tar])
 (all-the-icons . [(20210106 1227) ((emacs (24 3)) (memoize (1 0 1))) "A library for inserting Developer icons" tar])
 (anaconda-mode . [(20210101 833) ((emacs (25 1)) (pythonic (0 1 0)) (dash (2 6 0)) (s (1 9)) (f (0 16 2))) "Code navigation, documentation lookup and completion for Python" tar])
 (anzu . [(20201203 529) ((emacs (25 1))) "Show number of matches in mode-line while searching" tar])
 (async . [(20200809 501) ((emacs (24 3))) "Asynchronous processing in Emacs" tar])
 (auto-compile . [(20201122 1157) ((emacs (25 1)) (packed (3 0 1))) "automatically compile Emacs Lisp libraries" tar])
 (auto-complete . [(20201213 1255) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar])
 (auto-highlight-symbol . [(20210108 1841) nil "Automatic highlighting current symbol minor mode" tar])
 (auto-yasnippet . [(20191015 942) ((yasnippet (0 13 0))) "Quickly create disposable yasnippets" tar])
 (avy . [(20201226 1734) ((emacs (24 1)) (cl-lib (0 5))) "Jump to arbitrary positions in visible text and select text quickly." tar])
 (bind-key . [(20200805 1727) nil "A simple way to manage personal keybindings" tar])
 (bind-map . [(20161207 1511) ((emacs (24 3))) "Bind personal keymaps in multiple locations" tar])
 (blacken . [(20200626 2018) ((emacs (25 2))) "Reformat python buffers using the black formatter" tar])
 (browse-at-remote . [(20200820 654) ((f (0 17 2)) (s (1 9 0)) (cl-lib (0 5))) "Open github/gitlab/bitbucket/stash/gist/phab/sourcehut page from Emacs" tar])
 (bui . [(20210108 1141) ((emacs (24 3)) (dash (2 11 0))) "Buffer interface library" tar])
 (bundler . [(20200129 1338) ((inf-ruby (2 1)) (cl-lib (0 5))) "Interact with Bundler from Emacs" tar])
 (cargo . [(20210103 2111) ((emacs (24 3)) (rust-mode (0 2 0)) (markdown-mode (2 4))) "Emacs Minor Mode for Cargo, Rust's Package Manager." tar])
 (ccls . [(20200820 308) ((emacs (25 1)) (lsp-mode (6 3 1)) (dash (2 14 1))) "ccls client for lsp-mode" tar])
 (centered-cursor-mode . [(20200507 1529) nil "cursor stays vertically centered" tar])
 (cfrs . [(20210108 1152) ((emacs (26 1)) (dash (2 11 0)) (s (1 10 0)) (posframe (0 6 0))) "Childstring" tar])
 (chruby . [(20180114 1652) ((cl-lib (0 5))) "Emacs integration for chruby" tar])
 (cider . [(20210104 915) ((emacs (25)) (clojure-mode (5 12)) (parseedn (0 2)) (pkg-info (0 4)) (queue (0 2)) (spinner (1 7)) (seq (2 22)) (sesman (0 3 2))) "Clojure Interactive Development Environment that Rocks" tar])
 (cider-eval-sexp-fu . [(20190311 2152) ((emacs (24)) (eval-sexp-fu (0 5 0))) "Briefly highlights an evaluated sexp." tar])
 (clang-format . [(20191106 950) ((cl-lib (0 3))) "Format code using clang-format" tar])
 (clean-aindent-mode . [(20171017 2043) nil "Simple indent and unindent, trims indent white-space" tar])
 (clojure-mode . [(20201126 1558) ((emacs (25 1))) "Major mode for Clojure code" tar])
 (clojure-snippets . [(20180314 1308) ((yasnippet (0 10 0))) "Yasnippets for clojure" tar])
 (closql . [(20200704 2124) ((emacs (25 1)) (emacsql-sqlite (3 0 0))) "store EIEIO objects using EmacSQL" tar])
 (cmake-mode . [(20210104 1831) ((emacs (24 1))) "major-mode for editing CMake sources" tar])
 (column-enforce-mode . [(20200605 1933) nil "Highlight text that extends beyond a  column" tar])
 (common-lisp-snippets . [(20180226 1523) ((yasnippet (0 8 0))) "Yasnippets for Common Lisp" tar])
 (company . [(20210103 1124) ((emacs (24 3))) "Modular text completion framework" tar])
 (company-anaconda . [(20200404 1859) ((company (0 8 0)) (anaconda-mode (0 1 1)) (cl-lib (0 5 0)) (dash (2 6 0)) (s (1 9))) "Anaconda backend for company-mode" tar])
 (company-c-headers . [(20190825 1631) ((emacs (24 1)) (company (0 8))) "Company mode backend for C/C++ header files" tar])
 (company-go . [(20190203 19) ((company (0 8 0)) (go-mode (1 0 0))) "company-mode backend for Go (using gocode)" tar])
 (company-rtags . [(20191222 920) ((emacs (24 3)) (company (0 8 1)) (rtags (2 10))) "RTags back-end for company" tar])
 (company-web . [(20180402 1155) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar])
 (company-ycmd . [(20180520 1053) ((ycmd (1 3)) (company (0 9 3)) (deferred (0 5 1)) (s (1 11 0)) (dash (2 13 0)) (let-alist (1 0 5)) (f (0 19 0))) "company-mode backend for ycmd" tar])
 (concurrent . [(20161229 330) ((emacs (24 3)) (deferred (0 5 0))) "Concurrent utility functions for emacs lisp" tar])
 (cpp-auto-include . [(20191222 719) ((cl-lib (0 5))) "Insert and delete C++ header files automatically" tar])
 (csv-mode . [(1 14) ((emacs (24 1)) (cl-lib (0 5))) "Major mode for editing comma/char separated values" tar])
 (ctable . [(20171006 11) nil "Table component for Emacs Lisp" tar])
 (cython-mode . [(20190111 2150) nil "Major mode for editing Cython files" tar])
 (dap-mode . [(20201118 1304) ((emacs (26 1)) (dash (2 14 1)) (lsp-mode (6 0)) (dash-functional (1 2 0)) (bui (1 1 0)) (f (0 20 0)) (s (1 12 0)) (lsp-treemacs (0 1)) (posframe (0 7 0))) "Debug Adapter Protocol mode" tar])
 (dash . [(20210111 1247) ((emacs (24))) "A modern list library for Emacs" tar])
 (dash-docs . [(20200516 1943) ((emacs (24 4)) (cl-lib (0 5)) (async (1 9 3))) "Offline documentation browser using Dash docsets." tar])
 (dash-functional . [(20210103 1524) ((emacs (24)) (dash (2 0 0))) "Collection of useful combinators for Emacs Lisp" tar])
 (deferred . [(20170901 1330) ((emacs (24 4))) "Simple asynchronous functions for emacs lisp" tar])
 (define-word . [(20210103 1812) ((emacs (24 3))) "display the definition of word at point." tar])
 (deft . [(20210101 1519) nil "quickly browse, filter, and edit plain text notes" tar])
 (devdocs . [(20170731 850) nil "Launch DevDocs search" tar])
 (diff-hl . [(20210107 220) ((cl-lib (0 2)) (emacs (24 3))) "Highlight uncommitted changes using VC" tar])
 (diminish . [(20191127 1326) ((emacs (24 3))) "Diminished modes are minor modes with no modeline display" tar])
 (dired-quick-sort . [(20201221 403) ((hydra (0 13 0)) (emacs (24))) "Persistent quick sorting of dired buffers in various ways." tar])
 (disaster . [(20171016 2152) nil "Disassemble C/C++ code under cursor in Emacs" tar])
 (dotenv-mode . [(20191027 2129) ((emacs (24 3))) "Major mode for .env files" tar])
 (dumb-jump . [(20201205 1625) ((emacs (24 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "Jump to definition for 40+ languages without configuration" tar])
 (editorconfig . [(20210112 901) ((cl-lib (0 5)) (emacs (24))) "EditorConfig Emacs Plugin" tar])
 (elisp-slime-nav . [(20200304 2201) ((emacs (24 1)) (cl-lib (0 2))) "Make M, work in elisp like they do in slime" tar])
 (elpa-mirror . [(20210107 219) ((emacs (25 1))) "Create local package repository from installed packages" tar])
 (emacsql . [(20200714 28) ((emacs (25 1))) "highend" tar])
 (emacsql-sqlite . [(20190727 1710) ((emacs (25 1)) (emacsql (2 0 0))) "EmacSQL back-end for SQLite" tar])
 (emmet-mode . [(20180613 341) nil "Unofficial Emmet's support for emacs" tar])
 (emr . [(20210110 1928) ((s (1 3 1)) (dash (1 2 0)) (cl-lib (0 2)) (popup (0 5 0)) (emacs (24 1)) (list-utils (0 3 0)) (paredit (24 0 0)) (projectile (0 9 1)) (clang-format (0 0 1)) (iedit (0 97))) "Emacs refactoring system." tar])
 (enh-ruby-mode . [(20201222 858) ((emacs (24 3))) "Major mode for editing Ruby files" tar])
 (epc . [(20140610 534) ((concurrent (0 3 1)) (ctable (0 1 2))) "A RPC stack for the Emacs Lisp" tar])
 (epl . [(20180205 2049) ((cl-lib (0 3))) "Emacs Package Library" tar])
 (erlang . [(20201215 830) ((emacs (24 1))) "Erlang major mode" tar])
 (esh-help . [(20190905 22) ((dash (1 4 0))) "Add some help functions and support for Eshell" tar])
 (eshell-prompt-extras . [(20201115 440) ((emacs (25))) "Display extra information for your eshell prompt." tar])
 (eshell-z . [(20191116 333) ((cl-lib (0 5))) "cd to frequent directory in eshell" tar])
 (eval-sexp-fu . [(20191128 825) ((cl-lib (0))) "Tiny functionality enhancements for evaluating sexps." tar])
 (evil . [(20210109 807) ((emacs (24 1)) (goto-chg (1 6)) (cl-lib (0 5))) "Extensible Vi layer for Emacs." tar])
 (evil-anzu . [(20200514 1902) ((evil (1 0 0)) (anzu (0 46))) "anzu for evil-mode" tar])
 (evil-args . [(20180908 2157) ((evil (1 0 8))) "Motions and text objects for delimited arguments in Evil." tar])
 (evil-cleverparens . [(20170718 413) ((evil (1 0)) (paredit (1)) (smartparens (1 6 1)) (emacs (24 4)) (dash (2 12 0))) "Evil friendly minor-mode for editing lisp." tar])
 (evil-easymotion . [(20200424 135) ((emacs (24)) (avy (0 3 0)) (cl-lib (0 5))) "A port of vim's easymotion to emacs" tar])
 (evil-ediff . [(20170724 1923) ((evil (1 2 3))) "Make ediff a little evil" tar])
 (evil-escape . [(20180910 1234) ((emacs (24)) (evil (1 0 9)) (cl-lib (0 5))) "No description available." tar])
 (evil-exchange . [(20200118 252) ((evil (1 2 8)) (cl-lib (0 3))) "Exchange text more easily within Evil" tar])
 (evil-goggles . [(20200101 1935) ((emacs (24 4)) (evil (1 0 0))) "Add a visual hint to evil operations" tar])
 (evil-iedit-state . [(20200830 617) ((evil (1 0 9)) (iedit (0 9 9 9))) "Evil states to interface iedit mode." tar])
 (evil-indent-plus . [(20151109 1906) ((evil (0)) (cl-lib (0 5))) "Evil textobjects based on indentation" tar])
 (evil-lion . [(20170811 614) ((emacs (24 3)) (evil (1 0 0))) "Evil align operator, port of vim-lion" tar])
 (evil-lisp-state . [(20160404 248) ((evil (1 0 9)) (bind-map (0)) (smartparens (1 6 1))) "An evil state to edit Lisp code" tar])
 (evil-magit . [(20201107 1529) ((evil (1 2 3)) (magit (2 6 0))) "evil-based key bindings for magit" tar])
 (evil-matchit . [(20210110 1011) ((evil (1 2 0)) (emacs (25 1))) "Vim matchit ported to Evil" tar])
 (evil-nerd-commenter . [(20201017 1148) ((emacs (24 4))) "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar])
 (evil-numbers . [(20140606 1251) nil "increment/decrement numbers like in vim" tar])
 (evil-org . [(20201222 2023) ((emacs (24 4)) (evil (1 0))) "evil keybindings for org-mode" tar])
 (evil-surround . [(20200603 2216) ((evil (1 2 12))) "emulate surround.vim from Vim" tar])
 (evil-textobj-line . [(20150729 1522) ((evil (1 0 0))) "evil textobj line" tar])
 (evil-tutor . [(20150103 650) ((evil (1 0 9))) "Vimtutor adapted to Evil and wrapped in a major-mode" tar])
 (evil-unimpaired . [(20210113 231526) ((dash (2 12 0)) (f (0 18 0))) "Pairs of handy bracket mappings." tar])
 (evil-visual-mark-mode . [(20190116 1557) ((evil (1 0 9)) (dash (2 10))) "Display evil marks on buffer" tar])
 (evil-visualstar . [(20160223 48) ((evil (0))) "Starts a * or # search from the visual selection" tar])
 (expand-region . [(20200304 1839) nil "Increase selected region by semantic units." tar])
 (eyebrowse . [(20201107 955) ((dash (2 7 0)) (emacs (24 3 1))) "Easy window config switching" tar])
 (f . [(20191110 1357) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" tar])
 (fancy-battery . [(20150101 1204) ((emacs (24 1))) "Fancy battery display" tar])
 (feature-mode . [(20200815 1617) nil "Major mode for editing Gherkin (i.e. Cucumber) user stories" tar])
 (flx . [(20191115 659) ((cl-lib (0 3))) "fuzzy matching with good sorting" tar])
 (flx-ido . [(20180117 1519) ((flx (0 1)) (cl-lib (0 3))) "flx integration for ido" tar])
 (flycheck . [(20201228 2104) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "Onfly syntax checking" tar])
 (flycheck-elsa . [(20200203 1758) ((emacs (25)) (seq (2 0))) "Flycheck for Elsa." tar])
 (flycheck-package . [(20200304 2151) ((emacs (24 1)) (flycheck (0 22)) (package-lint (0 2))) "A Flycheck checker for elisp package authors" tar])
 (flycheck-pos-tip . [(20200516 1600) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" tar])
 (flycheck-rtags . [(20191222 920) ((emacs (24)) (flycheck (0 23)) (rtags (2 10))) "RTags Flycheck integration" tar])
 (flycheck-rust . [(20190319 1546) ((emacs (24 1)) (flycheck (28)) (dash (2 13 0)) (seq (2 3)) (let-alist (1 0 4))) "Flycheck: Rust additions and Cargo support" tar])
 (flycheck-ycmd . [(20181016 618) ((emacs (24)) (dash (2 13 0)) (flycheck (0 22)) (ycmd (1 2)) (let-alist (1 0 5))) "flycheck integration for ycmd" tar])
 (font-lock+ . [(20180102 339) nil "Enhancements to standard library `font-lock.el'." tar])
 (forge . [(20210112 1148) ((emacs (25 1)) (closql (1 0 0)) (dash (2 14 1)) (emacsql-sqlite (3 0 0)) (ghub (20190319)) (let-alist (1 0 5)) (magit (20190408)) (markdown-mode (2 3)) (transient (0 1 0))) "Access Git forges from Magit." tar])
 (fuzzy . [(20150730 337) nil "Fuzzy Matching" tar])
 (gh . [(20201222 438) ((emacs (25 1)) (pcache (0 4 2)) (logito (0 1)) (marshal (0 9 0))) "A GitHub library for Emacs" tar])
 (gh-md . [(20151207 1740) ((emacs (24))) "Render markdown using the Github api" tar])
 (ghub . [(20201211 1717) ((emacs (25 1)) (let-alist (1 0 5)) (treepy (0 1 1))) "Minuscule client libraries for Git forge APIs." tar])
 (gist . [(20171128 406) ((emacs (24 1)) (gh (0 10 0))) "Emacs integration for gist.github.com" tar])
 (git . [(20140128 1041) ((s (1 7 0)) (dash (2 2 0)) (f (0 10 0))) "An Elisp API for programmatically using Git" tar])
 (git-commit . [(20210102 1242) ((emacs (25 1)) (dash (20200524)) (transient (20200601)) (with-editor (20200522))) "Edit Git commit messages" tar])
 (git-link . [(20201214 2330) ((emacs (24 3))) "Get the GitHub/Bitbucket/GitLab URL for a buffer location" tar])
 (git-messenger . [(20201202 1637) ((emacs (24 3)) (popup (0 5 3))) "Popup last commit of current line" tar])
 (git-timemachine . [(20200603 701) ((emacs (24 3)) (transient (0 1 0))) "Walk through git revisions of a file" tar])
 (gitattributes-mode . [(20180318 1956) nil "Major mode for editing .gitattributes files" tar])
 (gitconfig-mode . [(20180318 1956) nil "Major mode for editing .gitconfig files" tar])
 (github-clone . [(20210108 1920) ((gh (1 0 1)) (magit (3 0 0)) (emacs (25 1))) "Fork and clone github repos" tar])
 (github-search . [(20190624 436) ((magit (0 8 1)) (gh (1 0 0))) "Clone repositories by searching github" tar])
 (gitignore-mode . [(20180318 1956) nil "Major mode for editing .gitignore files" tar])
 (gitignore-templates . [(20200228 1419) ((emacs (24 3))) "Create .gitignore using GitHub or gitignore.io API" tar])
 (gntp . [(20141025 250) nil "Growl Notification Protocol for Emacs" tar])
 (gnuplot . [(20210104 1052) ((emacs (24 3))) "Major-mode and interactive frontend for gnuplot" tar])
 (go-eldoc . [(20170305 1427) ((emacs (24 3)) (go-mode (1 0 0))) "eldoc for go-mode" tar])
 (go-fill-struct . [(20171225 331) ((emacs (24))) "Fill struct for golang." tar])
 (go-gen-test . [(20171023 358) ((emacs (24 3)) (s (1 12))) "Generate tests for go code with gotests" tar])
 (go-guru . [(20181012 330) ((go-mode (1 3 1)) (cl-lib (0 5))) "Integration of the Go 'guru' analysis tool into Emacs." tar])
 (go-impl . [(20170125 1552) ((emacs (24 3)) (go-mode (1 3 0))) "impl integration for go-mode" tar])
 (go-mode . [(20201204 1652) nil "Major mode for the Go programming language" tar])
 (go-rename . [(20190805 2101) ((go-mode (1 3 1))) "Integration of the 'gorename' tool into Emacs." tar])
 (go-tag . [(20180227 411) ((emacs (24 0)) (go-mode (1 5 0))) "Edit Golang struct field tag" tar])
 (godoctor . [(20180710 2152) nil "Frontend for godoctor" tar])
 (golden-ratio . [(20191028 1732) nil "Automatic resizing of Emacs windows to the golden ratio" tar])
 (google-c-style . [(20180130 1736) nil "Google's C/C++ style for c-mode" tar])
 (google-translate . [(20200809 1430) nil "Emacs interface to Google Translate." tar])
 (goto-chg . [(20201101 1029) nil "goto last change" tar])
 (graphviz-dot-mode . [(20200304 432) ((emacs (25 0))) "Mode for the dot-language used by graphviz (att)." tar])
 (grip-mode . [(20200725 725) ((emacs (24 4))) "Instant GitHub-flavored Markdown/Org preview using grip." tar])
 (groovy-imports . [(20161003 851) ((emacs (24 4)) (s (1 10 0)) (pcache (0 3 2))) "Code for dealing with Groovy imports" tar])
 (groovy-mode . [(20191031 2256) ((s (1 12 0)) (emacs (24 3)) (dash (2 13 0))) "Major mode for Groovy source files" tar])
 (haml-mode . [(20190219 2102) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing Haml files" tar])
 (helm . [(20210111 2036) ((emacs (25 1)) (async (1 9 4)) (popup (0 5 3)) (helm-core (3 6 5))) "Helm is an Emacs incremental and narrowing framework" tar])
 (helm-ag . [(20200915 1650) ((emacs (25 1)) (helm (2 0))) "The silver searcher with helm interface" tar])
 (helm-c-yasnippet . [(20201118 1009) ((emacs (25 1)) (helm (1 7 7)) (yasnippet (0 8 0))) "helm source for yasnippet.el" tar])
 (helm-cider . [(20180307 458) ((emacs (24 4)) (cider (0 16)) (helm-core (2 8))) "Helm interface to CIDER" tar])
 (helm-company . [(20190812 1429) ((helm (1 5 9)) (company (0 6 13))) "Helm interface for company-mode" tar])
 (helm-core . [(20210105 504) ((emacs (25 1)) (async (1 9 4))) "Development files for Helm" tar])
 (helm-css-scss . [(20191230 1549) ((emacs (24 3)) (helm (1 0))) "CSS/SCSS/LESS Selectors with helm interface" tar])
 (helm-ctest . [(20191031 1435) ((s (1 9 0)) (dash (2 11 0)) (helm-core (1 7 4))) "Run ctest from within emacs" tar])
 (helm-dash . [(20190527 1118) ((emacs (24 4)) (dash-docs (1 4 0)) (helm (1 9 2)) (cl-lib (0 5))) "Offline documentation browser for +150 APIs using Dash docsets." tar])
 (helm-descbinds . [(20190501 935) ((helm (1 5))) "A convenient `describe-bindings' with `helm'" tar])
 (helm-flx . [(20180103 516) ((emacs (24 4)) (helm (1 7 9)) (flx (0 5))) "Sort helm candidates by flx score" tar])
 (helm-git-grep . [(20170614 1411) ((helm-core (2 2 0))) "helm for git grep, an incremental git-grep(1)" tar])
 (helm-gitignore . [(20170211 8) ((gitignore-mode (1 1 0)) (helm (1 7 0)) (request (0 1 0)) (cl-lib (0 5))) "Generate .gitignore files with gitignore.io." tar])
 (helm-ls-git . [(20200519 912) ((helm (1 7 8))) "list git files." tar])
 (helm-lsp . [(20200910 518) ((emacs (25 1)) (dash (2 14 1)) (lsp-mode (5 0)) (helm (2 0))) "LSP helm integration" tar])
 (helm-make . [(20200620 27) nil "Select a Makefile target with helm" tar])
 (helm-mode-manager . [(20210108 2330) ((helm (1 5 3))) "Select and toggle major and minor modes with helm" tar])
 (helm-org . [(20200311 633) ((helm (3 3)) (emacs (24 4))) "Helm for org headlines and keywords completion" tar])
 (helm-org-rifle . [(20200512 1943) ((emacs (24 4)) (dash (2 12)) (f (0 18 1)) (helm (1 9 4)) (s (1 10 0))) "Rifle through your Org files" tar])
 (helm-projectile . [(20201217 908) ((helm (1 9 9)) (projectile (2 2 0)) (cl-lib (0 3))) "Helm integration for Projectile" tar])
 (helm-purpose . [(20170114 1636) ((emacs (24)) (helm (1 9 2)) (window-purpose (1 4))) "Helm Interface for Purpose" tar])
 (helm-pydoc . [(20160918 542) ((helm-core (2 0)) (emacs (24 4))) "pydoc with helm interface" tar])
 (helm-rtags . [(20191222 920) ((helm (2 0)) (rtags (2 10))) "A front-end for rtags" tar])
 (helm-swoop . [(20200814 448) ((emacs (25 1)) (helm (3 6))) "Efficiently hopping squeezed lines powered by helm interface" tar])
 (helm-themes . [(20200323 712) ((helm-core (2 0)) (emacs (24 4))) "Color theme selection with helm interface" tar])
 (helm-xref . [(20201004 1817) ((emacs (25 1)) (helm (1 9 4))) "Helm interface for xref results" tar])
 (hierarchy . [(20190425 842) ((emacs (25 1))) "Library to create and display hierarchy structures" tar])
 (highlight-indentation . [(20201110 1327) nil "Minor modes for highlighting indentation" tar])
 (highlight-numbers . [(20181013 1744) ((emacs (24)) (parent-mode (2 0))) "Highlight numbers in source code" tar])
 (highlight-parentheses . [(20210104 1625) ((emacs (24 3)) (cl-lib (0 6 1))) "Highlight surrounding parentheses" tar])
 (hl-todo . [(20210105 744) ((emacs (25))) "highlight TODO and similar keywords" tar])
 (ht . [(20210113 822) ((dash (2 12 0))) "The missing hash table library for Emacs" tar])
 (htmlize . [(20200816 746) nil "Convert buffer text and decorations to HTML." tar])
 (hungry-delete . [(20201007 2024) nil "hungry delete minor mode" tar])
 (hybrid-mode . [(20210113 230355) ((emacs (24)) (evil (1 0 9))) "Put one foot in the church of Emacs" tar])
 (hydra . [(20201115 1055) ((cl-lib (0 5)) (lv (0))) "Make bindings that stick around." tar])
 (iedit . [(20210111 1147) nil "Edit multiple regions in the same way simultaneously." tar])
 (imenu-list . [(20190115 2130) ((cl-lib (0 5))) "Show imenu entries in a separate buffer" tar])
 (impatient-mode . [(20200723 2117) ((emacs (24 3)) (simple-httpd (1 5 0)) (htmlize (1 40))) "Serve buffers live over HTTP" tar])
 (importmagic . [(20180520 303) ((f (0 11 0)) (epc (0 1 0)) (emacs (24 3))) "Fix Python imports using importmagic." tar])
 (indent-guide . [(20191106 240) nil "show vertical lines to guide indentation" tar])
 (inf-ruby . [(20201228 1237) ((emacs (24 3))) "Run a Ruby process in a buffer" tar])
 (inflections . [(20210110 2237) ((cl-lib (0 5)) (emacs (24))) "convert english words between singular and plural" tar])
 (js-doc . [(20160715 434) nil "Insert JsDoc style comment easily" tar])
 (js2-mode . [(20201220 1718) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (js2-refactor . [(20190630 2108) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar])
 (json-mode . [(20190123 422) ((json-reformat (0 0 5)) (json-snatcher (1 0 0))) "Major mode for editing JSON files." tar])
 (json-navigator . [(20191213 755) ((emacs (25 1)) (hierarchy (0 6 0))) "View and navigate JSON structures" tar])
 (json-reformat . [(20160212 853) nil "Reformatting tool for JSON" tar])
 (json-snatcher . [(20200916 1717) ((emacs (24))) "Grabs the path to JSON values in a JSON file" tar])
 (link-hint . [(20201127 2144) ((avy (0 4 0)) (emacs (24 4))) "Use avy to open, copy, etc. visible links" tar])
 (list-utils . [(20210111 1522) nil "List-manipulation utility functions" tar])
 (live-py-mode . [(20210101 1827) ((emacs (24 3))) "Live Coding in Python" tar])
 (livid-mode . [(20131116 1344) ((skewer-mode (1 5 3)) (s (1 8 0))) "Live browser eval of JavaScript every time a buffer changes" tar])
 (log4e . [(20200420 745) nil "provide logging framework for elisp" tar])
 (logito . [(20201226 534) ((emacs (25 1))) "logging library for Emacs" tar])
 (lorem-ipsum . [(20190819 2042) nil "Insert dummy pseudo Latin text." tar])
 (lsp-java . [(20210105 1625) ((emacs (25 1)) (lsp-mode (6 0)) (markdown-mode (2 3)) (dash (2 14 1)) (f (0 20 0)) (ht (2 0)) (dash-functional (1 2 0)) (request (0 3 0)) (treemacs (2 5)) (dap-mode (0 5))) "Java support for lsp-mode" tar])
 (lsp-mode . [(20210111 1652) ((emacs (26 1)) (dash (2 14 1)) (dash-functional (2 14 1)) (f (0 20 0)) (ht (2 0)) (spinner (1 7 3)) (markdown-mode (2 3)) (lv (0))) "LSP mode" tar])
 (lsp-origami . [(20200914 1846) ((origami (1 0)) (lsp-mode (6 1))) "origami.el support for lsp-mode" tar])
 (lsp-pyright . [(20201014 1620) ((emacs (26 1)) (lsp-mode (7 0)) (dash (2 14 1)) (ht (2 0))) "Python LSP client using Pyright" tar])
 (lsp-python-ms . [(20201023 1750) ((emacs (25 1)) (lsp-mode (6 1))) "The lspserver" tar])
 (lsp-treemacs . [(20201230 2214) ((emacs (26 1)) (dash (2 14 1)) (dash-functional (2 14 1)) (f (0 20 0)) (ht (2 0)) (treemacs (2 5)) (lsp-mode (6 0))) "LSP treemacs" tar])
 (lsp-ui . [(20210110 1507) ((emacs (26 1)) (dash (2 14)) (dash-functional (1 2 0)) (lsp-mode (6 0)) (markdown-mode (2 3))) "UI modules for lsp-mode" tar])
 (lv . [(20200507 1518) nil "Other echo area" tar])
 (macrostep . [(20161120 2106) ((cl-lib (0 5))) "interactive macro expander" tar])
 (magit . [(20210105 1030) ((emacs (25 1)) (async (20200113)) (dash (20200524)) (git-commit (20200516)) (transient (20200601)) (with-editor (20200522))) "A Git porcelain inside Emacs." tar])
 (magit-gitflow . [(20170929 824) ((magit (2 1 0)) (magit-popup (2 2 0))) "gitflow extension for magit" tar])
 (magit-popup . [(20200719 1015) ((emacs (24 4)) (dash (2 13 0))) "Define prefixsuffix command combos" tar])
 (magit-section . [(20210103 1631) ((emacs (25 1)) (dash (20200524))) "Sections for read-only buffers" tar])
 (magit-svn . [(20190821 1455) ((emacs (24 4)) (magit (2 1 0))) "Git-Svn extension for Magit" tar])
 (markdown-mode . [(20210112 1557) ((emacs (25 1))) "Major mode for Markdown-formatted text" tar])
 (markdown-toc . [(20200517 1233) ((s (1 9 0)) (dash (2 11 0)) (markdown-mode (2 1))) "A simple TOC generator for markdown file" tar])
 (marshal . [(20201223 1853) ((emacs (25 1)) (ht (2 0))) "eieio extension for automatic (un)marshalling" tar])
 (maven-test-mode . [(20141220 557) ((s (1 9)) (emacs (24))) "Utilities for navigating test files and running maven test tasks." tar])
 (meghanada . [(20200628 247) ((emacs (24 3)) (yasnippet (0 6 1)) (company (0 9 0)) (flycheck (0 23))) "A better java development mode" tar])
 (memoize . [(20200103 2036) nil "Memoization functions" tar])
 (minitest . [(20200506 308) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" tar])
 (mmm-mode . [(20200908 2236) ((cl-lib (0 2))) "Allow Multiple Major Modes in a buffer" tar])
 (move-text . [(20170909 330) nil "Move current line or region with Mdown." tar])
 (multi-term . [(20200514 428) nil "Managing multiple terminal buffers in Emacs." tar])
 (multiple-cursors . [(20201215 1559) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (mustache . [(20201119 529) ((ht (0 9)) (s (1 3 0)) (dash (1 2 0))) "a mustache templating library in emacs lisp" tar])
 (mvn . [(20181002 1617) nil "helpers for compiling with maven" tar])
 (mwim . [(20181110 1900) nil "Switch between the beginning/end of line or code" tar])
 (nameless . [(20190429 1202) ((emacs (24 4))) "Hide package namespace in your emacs-lisp code" tar])
 (nginx-mode . [(20170612 437) nil "major mode for editing nginx config files" tar])
 (nodejs-repl . [(20200802 1310) nil "Run Node.js REPL" tar])
 (open-junk-file . [(20161210 1114) nil "Open a junk (memo) file to tryerror" tar])
 (org-brain . [(20210108 1512) ((emacs (25 1)) (org-plus-contrib (9 2))) "Org-mode concept mapping" tar])
 (org-category-capture . [(20200329 313) ((org-plus-contrib (9 0 0)) (emacs (24))) "Contextualy capture of org-mode TODOs." tar])
 (org-cliplink . [(20201126 1020) ((emacs (24 4))) "insert org-mode links from the clipboard" tar])
 (org-download . [(20210105 1758) ((emacs (24 3)) (async (1 2))) "Image dragmode." tar])
 (org-mime . [(20201224 1404) ((emacs (25 1)) (cl-lib (0 5))) "org html export for text/html MIME emails" tar])
 (org-page . [(20170807 224) ((ht (1 5)) (simple-httpd (1 4 6)) (mustache (0 22)) (htmlize (1 47)) (org (8 0)) (dash (2 0 0)) (cl-lib (0 5)) (git (0 1 1))) "a static site generator based on org mode" tar])
 (org-plus-contrib . [(20210111) nil "Outline-based notes management and organizer" tar])
 (org-pomodoro . [(20190530 1445) ((alert (0 5 10)) (cl-lib (0 5))) "Pomodoro implementation for org-mode." tar])
 (org-present . [(20200204 1647) ((org-plus-contrib (7))) "Minimalist presentation minormode." tar])
 (org-projectile . [(20190130 1439) ((projectile (0 11 0)) (dash (2 10 0)) (emacs (24)) (s (1 9 0)) (org-category-capture (0 0 0))) "Repository todo management for org-mode" tar])
 (org-rich-yank . [(20201115 823) ((emacs (24 4))) "Paste with org-mode markup and link to source" tar])
 (org-superstar . [(20200818 2257) ((org-plus-contrib (9 1 9)) (emacs (26 1))) "Prettify headings and plain lists in Org mode" tar])
 (orgit . [(20200714 1943) ((emacs (25 1)) (magit (2 90 1)) (org-plus-contrib (9 3))) "support for Org links to Magit buffers" tar])
 (origami . [(20200331 1019) ((s (1 9 0)) (dash (2 5 0)) (emacs (24)) (cl-lib (0 5))) "Flexible text folding" tar])
 (overseer . [(20180226 619) ((emacs (24)) (dash (2 10 0)) (pkg-info (0 4)) (f (0 18 1))) "Ert-runner Integration Into Emacs" tar])
 (ox-gfm . [(20161114 2208) nil "Github Flavored Markdown Back-End for Org Export Engine" tar])
 (ox-hugo . [(20201111 1638) ((emacs (24 4)) (org (9 0))) "Hugo Markdown Back-End for Org Export Engine" tar])
 (ox-twbs . [(20200628 1949) nil "Bootstrap compatible HTML Back-End for Org" tar])
 (package-lint . [(20210111 341) ((cl-lib (0 5)) (emacs (24 1)) (let-alist (1 0 6))) "A linting library for elisp package authors" tar])
 (packed . [(20201120 2047) ((emacs (24 3))) "package manager agnostic Emacs Lisp package utilities" tar])
 (paradox . [(20191011 1111) ((emacs (24 4)) (seq (1 7)) (let-alist (1 0 3)) (spinner (1 7 3)) (hydra (0 13 2))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar])
 (paredit . [(20191121 2328) nil "minor mode for editing parentheses" tar])
 (parent-mode . [(20150824 2300) nil "get major mode's parent modes" tar])
 (parseclj . [(20201012 712) ((emacs (25)) (a (0 1 0 -3 4))) "Clojure/EDN parser" tar])
 (parseedn . [(20200419 1124) ((emacs (25)) (a (0 1 0 -3 4)) (parseclj (0 1 0))) "Clojure/EDN parser" tar])
 (password-generator . [(20201123 1610) nil "Password generator for humans. Good, Bad, Phonetic passwords included." tar])
 (pcache . [(20201226 634) ((emacs (25 1))) "persistent caching for Emacs." tar])
 (pcre2el . [(20161120 2103) ((emacs (24)) (cl-lib (0 3))) "regexp syntax converter" tar])
 (persp-mode . [(20201128 2015) ((emacs (24 3))) "windows/buffers sets shared among frames + save/load." tar])
 (pfuture . [(20200425 1357) ((emacs (25 2))) "a simple wrapper around asynchronous processes" tar])
 (pip-requirements . [(20181027 1629) ((dash (2 8 0))) "A major mode for editing pip requirements files." tar])
 (pipenv . [(20201206 1408) ((emacs (25 1)) (f (0 19 0)) (s (1 12 0)) (pyvenv (1 20))) "A Pipenv porcelain" tar])
 (pippel . [(20180710 856) ((emacs (25 1)) (s (1 11 0)) (dash (2 12 0))) "Frontend to python package manager pip" tar])
 (pkg-info . [(20150517 1143) ((epl (0 8))) "Information about packages" tar])
 (poetry . [(20201114 1723) ((transient (0 2 0)) (pyvenv (1 2)) (emacs (25 1))) "Interface to Poetry" tar])
 (polymode . [(20200606 1106) ((emacs (25))) "Extensible framework for multiple major modes" tar])
 (popup . [(20210108 1821) ((cl-lib (0 5))) "Visual Popup User Interface" tar])
 (popwin . [(20200908 816) ((emacs (24 3))) "Popup Window Manager" tar])
 (pos-tip . [(20191227 1356) nil "Show tooltip at point" tar])
 (posframe . [(20210113 314) ((emacs (26))) "Pop a posframe (just a frame) at point" tar])
 (powerline . [(20201129 2306) ((cl-lib (0 2))) "Rewrite of Powerline" tar])
 (prettier-js . [(20180109 726) nil "Minor mode to format JS code on file save" tar])
 (projectile . [(20210104 1216) ((emacs (25 1)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" tar])
 (projectile-rails . [(20201004 1011) ((emacs (24 3)) (projectile (0 12 0)) (inflections (1 1)) (inf-ruby (2 2 6)) (f (0 13 0)) (rake (0 3 2))) "Minor mode for Rails projects based on projectile-mode" tar])
 (pug-mode . [(20180513 2126) ((emacs (24 4)) (cl-lib (0 5))) "Major mode for jade/pug template files" tar])
 (py-isort . [(20160925 1018) nil "Use isort to sort the imports in a Python buffer" tar])
 (pyenv-mode . [(20200518 1521) ((pythonic (0 1 0))) "Integrate pyenv with python-mode" tar])
 (pytest . [(20200330 41) ((s (1 9 0))) "Easy Python test running in Emacs" tar])
 (pythonic . [(20200806 434) ((emacs (25 1)) (s (1 9)) (f (0 17 2))) "Utility functions for writing pythonic emacs package." tar])
 (pyvenv . [(20201227 1623) nil "Python virtual environment interface" tar])
 (queue . [(0 2) nil "Queue data structure" tar])
 (racer . [(20191001 2344) ((emacs (25 1)) (rust-mode (0 2 0)) (dash (2 13 0)) (s (1 10 0)) (f (0 18 2)) (pos-tip (0 4 6))) "code completion, goto-definition and docs browsing for Rust via racer" tar])
 (racket-mode . [(20210110 1607) ((emacs (25 1)) (faceup (0 0 2)) (pos-tip (20191127 1028))) "Racket editing, REPL, and more" tar])
 (rainbow-delimiters . [(20200827 321) nil "Highlight brackets according to their depth" tar])
 (rake . [(20180212 1008) ((f (0 13 0)) (dash (1 5 0)) (cl-lib (0 5))) "Run rake commands" tar])
 (rbenv . [(20141120 749) nil "Emacs integration for rbenv" tar])
 (request . [(20201026 2324) ((emacs (24 4))) "Compatible layer for URL request in Emacs" tar])
 (request-deferred . [(20181129 317) ((deferred (0 3 1)) (request (0 2 0))) "Wrap request.el by deferred" tar])
 (restart-emacs . [(20201127 1425) nil "Restart emacs from within emacs" tar])
 (rjsx-mode . [(20200120 1446) ((emacs (24 4)) (js2-mode (20170504))) "Real support for JSX" tar])
 (robe . [(20201214 2255) ((inf-ruby (2 5 1)) (emacs (24 4))) "Code navigation, documentation lookup and completion for Ruby" tar])
 (ron-mode . [(20200830 1554) ((emacs (24 5 1))) "Rusty Object Notation mode" tar])
 (rspec-mode . [(20201228 1319) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar])
 (rtags . [(20201218 1821) ((emacs (24 3))) "A front-end for rtags" tar])
 (rubocop . [(20190326 1424) ((emacs (24))) "An Emacs interface for RuboCop" tar])
 (rubocopfmt . [(20200713 1144) ((cl-lib (0 5))) "Minor-mode to format Ruby code with RuboCop on save" tar])
 (ruby-hash-syntax . [(20210106 224) ((emacs (24 1))) "Toggle ruby hash syntax between => and 1.9+ styles" tar])
 (ruby-refactor . [(20160214 1650) ((ruby-mode (1 2))) "A minor mode which presents various Ruby refactoring helpers." tar])
 (ruby-test-mode . [(20201027 905) ((ruby-mode (1 0)) (pcre2el (1 8))) "Minor mode for Behaviour and Test Driven" tar])
 (ruby-tools . [(20151209 1615) nil "Collection of handy functions for ruby-mode." tar])
 (rust-mode . [(20201204 1527) ((emacs (25 1))) "A major emacs mode for editing Rust source code" tar])
 (rvm . [(20201222 17) nil "Emacs integration for rvm" tar])
 (s . [(20180406 808) nil "The long lost Emacs string manipulation library." tar])
 (sass-mode . [(20190502 53) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" tar])
 (scss-mode . [(20180123 1708) nil "Major mode for editing SCSS files" tar])
 (seeing-is-believing . [(20170214 1320) nil "minor mode for running the seeingbelieving ruby gem" tar])
 (seq . [(2 22) nil "Sequence manipulation functions" tar])
 (sesman . [(20190909 1754) ((emacs (25))) "Generic Session Manager" tar])
 (shell-pop . [(20200315 1139) ((emacs (24)) (cl-lib (0 5))) "helps you to use shell easily on Emacs. Only one key action to work." tar])
 (simple-httpd . [(20191103 1446) ((cl-lib (0 3))) "pure elisp HTTP server" tar])
 (skewer-mode . [(20200304 1142) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar])
 (slim-mode . [(20170728 1348) nil "Major mode for editing Slim files" tar])
 (slime . [(20210105 2148) ((cl-lib (0 5)) (macrostep (0 9))) "Superior Lisp Interaction Mode for Emacs" tar])
 (slime-company . [(20200424 1045) ((emacs (24 4)) (slime (2 13)) (company (0 9 0))) "slime completion backend for company mode" tar])
 (smartparens . [(20201229 1937) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (smeargle . [(20200323 533) ((emacs (24 3))) "Highlighting region by last updated time" tar])
 (spaceline . [(20201016 1043) ((emacs (24 4)) (cl-lib (0 5)) (powerline (2 3)) (dash (2 11 0)) (s (1 10 0))) "Modeline configuration library for powerline" tar])
 (spaceline-all-the-icons . [(20190325 1602) ((emacs (24 4)) (all-the-icons (2 6 0)) (spaceline (2 0 0)) (memoize (1 0 1))) "A Spaceline theme using All The Icons" tar])
 (sphinx-doc . [(20160116 1117) ((s (1 9 0)) (cl-lib (0 5)) (dash (2 10 0))) "Sphinx friendly docstrings for Python functions" tar])
 (spinner . [(1 7 3) nil "Add spinners and progressline for ongoing operations" tar])
 (sql-indent . [(20200919 914) ((cl-lib (0 5))) "Support for indenting code in SQL files." tar])
 (string-inflection . [(20200927 747) nil "underscore > lowerCamelCase conversion of names" tar])
 (symbol-overlay . [(20200828 425) ((emacs (24 3)) (seq (2 2))) "Highlight symbols with keymap-enabled overlays" tar])
 (symon . [(20170224 833) nil "tiny graphical system monitor" tar])
 (tagedit . [(20161121 855) ((s (1 3 1)) (dash (1 0 3))) "Some pareditmode" tar])
 (terminal-here . [(20201230 1219) ((emacs (25 1))) "Run an external terminal in current directory" tar])
 (tern . [(20181108 722) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" tar])
 (toc-org . [(20201105 826) nil "add table of contents to orgtoc)" tar])
 (toml-mode . [(20161107 1800) ((emacs (24)) (cl-lib (0 5))) "Major mode for editing TOML files" tar])
 (transient . [(20210103 1546) ((emacs (25 1))) "Transient commands" tar])
 (treemacs . [(20210108 1145) ((emacs (26 1)) (cl-lib (0 5)) (dash (2 11 0)) (s (1 12 0)) (f (0 11 0)) (ace-window (0 9 0)) (pfuture (1 7)) (hydra (0 13 2)) (ht (2 2)) (cfrs (1 3 2))) "A tree style file explorer package" tar])
 (treemacs-evil . [(20210107 1251) ((emacs (26 1)) (evil (1 2 12)) (treemacs (0 0))) "Evil mode integration for treemacs" tar])
 (treemacs-icons-dired . [(20210107 1251) ((treemacs (0 0)) (emacs (26 1))) "Treemacs icons for dired" tar])
 (treemacs-magit . [(20210107 1251) ((emacs (26 1)) (treemacs (0 0)) (pfuture (1 3)) (magit (2 90 0))) "Magit integration for treemacs" tar])
 (treemacs-persp . [(20210107 1251) ((emacs (26 1)) (treemacs (0 0)) (persp-mode (2 9 7)) (dash (2 11 0))) "Persp-mode integration for treemacs" tar])
 (treemacs-projectile . [(20210107 1251) ((emacs (26 1)) (projectile (0 14 0)) (treemacs (0 0))) "Projectile integration for treemacs" tar])
 (treepy . [(20191108 2217) ((emacs (25 1))) "Generic tree traversal tools" tar])
 (undo-tree . [(0 7 5) nil "Treat undo history as a tree" tar])
 (unfill . [(20210106 220) ((emacs (24 1))) "Do the opposite of fillregion" tar])
 (use-package . [(20210106 2145) ((emacs (24 3)) (bind-key (2 4))) "A configuration macro for simplifying your .emacs" tar])
 (uuidgen . [(20200816 1308) nil "Provides various UUID generating functions" tar])
 (vi-tilde-fringe . [(20141028 242) ((emacs (24))) "Displays tildes in the fringe on empty lines a la Vi." tar])
 (visual-fill-column . [(20201229 2303) ((emacs (25 1))) "fillmode" tar])
 (volatile-highlights . [(20160612 155) nil "Minor mode for visual feedback on some operations." tar])
 (vterm . [(20210111 522) ((emacs (25 1))) "Fully-featured terminal emulator" tar])
 (web-beautify . [(20161115 2247) nil "Format HTML, CSS and JavaScript/JSON" tar])
 (web-completion-data . [(20160318 848) nil "Shared completion data for acweb" tar])
 (web-mode . [(20201227 1048) ((emacs (23 1))) "major mode for editing web templates" tar])
 (which-key . [(20201216 1720) ((emacs (24 4))) "Display available keybindings in popup" tar])
 (window-purpose . [(20190628 1827) ((emacs (24 4)) (let-alist (1 0 3)) (imenu-list (0 1))) "Purpose-based window management for Emacs" tar])
 (winum . [(20190911 1607) ((cl-lib (0 5)) (dash (2 13 0))) "Navigate windows and frames using numbers." tar])
 (with-editor . [(20210110 1545) ((emacs (24 4)) (async (1 9))) "Use the Emacsclient as $EDITOR" tar])
 (writeroom-mode . [(20201229 2242) ((emacs (25 1)) (visual-fill-column (2 2))) "Minor mode for distraction-free writing" tar])
 (ws-butler . [(20201117 1528) nil "Unobtrusively remove trailing whitespace." tar])
 (xterm-color . [(20200605 2017) ((emacs (24 4))) "ANSI, XTERM 256 and Truecolor support" tar])
 (yaml-mode . [(20201109 1026) ((emacs (24 1))) "Major mode for editing YAML files" tar])
 (yapfify . [(20200406 830) nil "(automatically) format python buffers using YAPF." tar])
 (yasnippet . [(20200604 246) ((cl-lib (0 5))) "Yet another snippet extension for Emacs" tar])
 (yasnippet-snippets . [(20210105 1346) ((yasnippet (0 8 0))) "Collection of yasnippet snippets" tar])
 (ycmd . [(20190416 807) ((emacs (24 4)) (dash (2 13 0)) (s (1 11 0)) (deferred (0 5 1)) (cl-lib (0 6 1)) (let-alist (1 0 5)) (request (0 3 0)) (request-deferred (0 3 0)) (pkg-info (0 6))) "emacs bindings to the ycmd completion server" tar])
 (zeal-at-point . [(20180131 2354) nil "Search the word at point with Zeal" tar])
 (know-your-http-well . [(20160208 2304) nil "Look up the meaning of HTTP headers, methods, relations, status codes" tar])
 (restclient . [(20200901 1442) nil "An interactive HTTP client for Emacs" tar])
 (company-restclient . [(20190426 1312) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24)) (know-your-http-well (0 2 0)) (restclient (0 0 0))) "companymode" tar])
 (ob-http . [(20180707 1448) ((s (1 9 0)) (cl-lib (0 5))) "http request in org-mode babel" tar])
 (ob-restclient . [(20200316 759) ((restclient (0))) "orgmode" tar])
 (restclient-helm . [(20170314 1554) ((restclient (0)) (helm (1 9 4))) "helm interface for restclient.el" tar])
)